{"version":3,"sources":["api/getUserInfo.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["axios","require","getUserInfo","userId","get","then","response","data","catch","error","Home","props","context","getUserData","state","userInput","userInfo","setState","bio","blog","company","createdAt","created_at","email","eventsUrl","events_url","followers","followersUrl","followers_url","following","followingUrl","following_url","gistsUrl","gists_url","gravatarId","gravatar_id","hireable","htmlUrl","html_url","id","location","login","name","nodeId","node_id","organizationsUrl","organizations_url","publicGists","public_gists","publicRepos","public_repos","receivedEventsUrl","received_events_url","reposUrl","repos_url","siteAdmin","site_admin","starredUrl","starred_url","subscriptionsUrl","subscriptions_url","type","updatedAt","updated_at","url","avatarUrl","avatar_url","className","onChange","value","onRequestSearch","style","margin","maxWidth","background","black","boxShadow","color","white","border","float","header","avatar","this","positionName","stats","Component","particleParams","bgStyles","position","top","left","width","height","textAlign","App","params","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f3491f79.chunk.js","sourcesContent":["var axios = require('axios')\n\nfunction getUserInfo(userId) {\n  return axios.get(`https://api.github.com/users/${userId}`)\n    .then(function(response){\n      return response.data\n    })\n    .catch(function (error) {\n      return undefined\n  })\n}\n\nexport default getUserInfo;\n\n","import React, {Component} from 'react';\nimport SearchBar from 'material-ui-search-bar'\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider'\nimport { black } from 'material-ui/styles/colors';\nimport { white } from 'material-ui/styles/colors';\nimport getUserData from '../api/getUserInfo'\nimport {UserCard} from 'react-ui-cards';\n \nclass Home extends Component{\n  constructor(props, context) {\n    super(props, context);\n    this.state = { \n      userInput: \"\",\n      bio: \"\", \n      blog: \"\",\n      company: \"\",\n      createdAt: \"\",\n      email: \"\",\n      eventsUrl: \"\",\n      followers: \"\",\n      followersUrl: \"\",\n      following: \"\",\n      followingUrl: \"\",\n      gistsUrl: \"\",\n      gravatarId: \"\",\n      hireable: \"\",\n      htmlUrl: \"\",\n      id: \"\",\n      location: \"\",\n      login: \"\",\n      name: \"\",\n      nodeId: \"\",\n      organizationsUrl: \"\",\n      publicGists: \"\",\n      publicRepos: \"\",\n      receivedEventsUrl: \"\",\n      reposUrl: \"\",\n      siteAdmin: \"\",\n      starredUrl: \"\",\n      subscriptionsUrl: \"\",\n      type: \"\",\n      updatedAt: \"\",\n      url: \"\",\n      avatarUrl: \"\",\n      publicRepos: \"\"\n    };\n  }\n\n  getUserData = () => {\n    getUserData(this.state.userInput).then(userInfo => { \n      this.setState({\n        bio:                userInfo.bio,\n        blog:               userInfo.blog,\n        company:            userInfo.company,\n        createdAt:          userInfo.created_at,\n        email:              userInfo.email,\n        eventsUrl:          userInfo.events_url,\n        followers:          userInfo.followers,\n        followersUrl:       userInfo.followers_url,\n        following:          userInfo.following,\n        followingUrl:       userInfo.following_url,\n        gistsUrl:           userInfo.gists_url,\n        gravatarId:         userInfo.gravatar_id,\n        hireable:           userInfo.hireable,\n        htmlUrl:            userInfo.html_url,\n        id:                 userInfo.id,\n        location:           userInfo.location,\n        login:              userInfo.login,\n        name:               userInfo.name,\n        nodeId:             userInfo.node_id,\n        organizationsUrl:   userInfo.organizations_url,\n        publicGists:        userInfo.public_gists,\n        publicRepos:        userInfo.public_repos,\n        receivedEventsUrl:  userInfo.received_events_url,\n        reposUrl:           userInfo.repos_url,\n        siteAdmin:          userInfo.site_admin,\n        starredUrl:         userInfo.starred_url,\n        subscriptionsUrl:   userInfo.subscriptions_url,\n        type:               userInfo.type,\n        updatedAt:          userInfo.updated_at,\n        url:                userInfo.url,\n        avatarUrl:          userInfo.avatar_url\n      });\n    });\n  }\n\n  render(){\n    debugger\n    return (\n      <div className='search-box'>\n        <h3>Enter your GitHub username</h3>\n        <MuiThemeProvider>\n          <SearchBar\n            onChange={(value) => this.setState({userInput: value})}\n            onRequestSearch={() => this.getUserData()}\n            className='search-bar'\n            style={{\n                margin: '0 auto',\n                maxWidth: 500,\n                background: black,\n                boxShadow: 'rgba(255, 255, 255, 0.12) 0px 1px 6px, rgba(255, 255, 255, 0.12) 0px 1px 4px',\n                color: white,\n                border: '1px solid #ffff'\n            }}\n          />\n        </MuiThemeProvider>\n        <div className='user-profile'>\n          <UserCard\n            float\n            header= { 'https://i.imgur.com/w5tX1Pn.jpg' }\n            avatar= { this.state.avatarUrl === \"\" ? 'https://i.imgur.com/uDYejhJ.jpg' : this.state.avatarUrl }\n            name= { this.state.name === \"\" ? 'Justin Case' : this.state.name }\n            positionName= { this.state.bio === \"\" ? 'Software Developer' : this.state.bio }\n            stats={[\n              {\n                name: 'Repository',\n                value: (this.state.publicRepos === \"\" ? 0 : this.state.publicRepos)\n              },\n              {\n                name: 'Followers',\n                value: (this.state.followers === \"\" ? 0 : this.state.followers)\n              },\n              {\n                name: 'Following',\n                value: (this.state.following === \"\" ? 0 : this.state.following)\n              }\n            ]}\n          />\n        </div>\n      </div>\n    );\n  };\n}\n\nexport default Home;","import React, {Component} from 'react';\nimport './App.css';\nimport Home from './components/Home'\nimport Particles from 'react-particles-js';\n\n\nconst particleParams = {\n  \"particles\": {\n    \"number\": {\n      \"value\": 80,\n      \"density\": {\n        \"enable\": true,\n        \"value_area\": 800\n      }\n    },\n    \"color\": {\n      \"value\": \"#ffffff\"\n    },\n    \"shape\": {\n      \"type\": \"circle\",\n      \"stroke\": {\n        \"width\": 0,\n        \"color\": \"#000000\"\n      },\n      \"polygon\": {\n        \"nb_sides\": 5\n      },\n      \"image\": {\n        \"src\": \"img/github.svg\",\n        \"width\": 100,\n        \"height\": 100\n      }\n    },\n    \"opacity\": {\n      \"value\": 0.5,\n      \"random\": false,\n      \"anim\": {\n        \"enable\": false,\n        \"speed\": 1,\n        \"opacity_min\": 0.1,\n        \"sync\": false\n      }\n    },\n    \"size\": {\n      \"value\": 3,\n      \"random\": true,\n      \"anim\": {\n        \"enable\": false,\n        \"speed\": 40,\n        \"size_min\": 0.1,\n        \"sync\": false\n      }\n    },\n    \"line_linked\": {\n      \"enable\": true,\n      \"distance\": 150,\n      \"color\": \"#ffffff\",\n      \"opacity\": 0.4,\n      \"width\": 1\n    },\n    \"move\": {\n      \"enable\": true,\n      \"speed\": 6,\n      \"direction\": \"none\",\n      \"random\": false,\n      \"straight\": false,\n      \"out_mode\": \"out\",\n      \"bounce\": false,\n      \"attract\": {\n        \"enable\": false,\n        \"rotateX\": 600,\n        \"rotateY\": 1200\n      }\n    }\n  },\n  \"interactivity\": {\n    \"detect_on\": \"canvas\",\n    \"events\": {\n      \"onhover\": {\n        \"enable\": true,\n        \"mode\": \"repulse\"\n      },\n      \"onclick\": {\n        \"enable\": true,\n        \"mode\": \"push\"\n      },\n      \"resize\": true\n    },\n    \"modes\": {\n      \"grab\": {\n        \"distance\": 400,\n        \"line_linked\": {\n          \"opacity\": 1\n        }\n      },\n      \"bubble\": {\n        \"distance\": 400,\n        \"size\": 40,\n        \"duration\": 2,\n        \"opacity\": 8,\n        \"speed\": 3\n      },\n      \"repulse\": {\n        \"distance\": 200,\n        \"duration\": 0.4\n      },\n      \"push\": {\n        \"particles_nb\": 4\n      },\n      \"remove\": {\n        \"particles_nb\": 2\n      }\n    }\n  },\n  \"retina_detect\": true\n}\n\nconst bgStyles = {\n  position: \"absolute\",\n  top: 0,\n  left: 0,\n  width: \"100%\",\n  height: \"100%\",\n  color: \"white\",\n  textAlign: 'center'\n}\n\nclass App extends Component{\n  render(){\n    return (\n      <div>\n      <Particles params={particleParams} />\n      <div style={bgStyles} >\n        {<Home></Home>}\n      </div>\n    </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}